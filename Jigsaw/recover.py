import base64
import os.path
import argparse
from Crypto.Cipher import AES

parser = argparse.ArgumentParser()
parser.add_argument("filename", help="File to be decrypted")
parser.add_argument("-k", required=True, help="AES Key")
parser.add_argument("-iv", required=False, help="AES Initialization Vector")

args = parser.parse_args()
print(args)

cwd = os.getcwd()
file_path = ("{}\{}".format(cwd, args.filename))
fp_ct = open(file_path, "rb")
ct = bytearray(fp_ct.read())
fp_ct.close()
extension = file_path.find(".NDGHacks")
fp_pt = open(file_path[:extension], "wb")

key = base64.b64decode(args.k)
if args.iv is not None:
    iv = [int(x) for x in args.iv.split(",")]
else:
    iv = [0,1,0,3,5,3,0,1,0,0,2,0,6,7,6,0]
iv = bytearray(iv)
stream_size = 65536

cipher = AES.new(key, AES.MODE_CBC, iv=iv)
for i in range(0, len(ct), stream_size):
    pt = cipher.decrypt(ct[i:i+stream_size])
    fp_pt.write(pt)
fp_pt.close()
